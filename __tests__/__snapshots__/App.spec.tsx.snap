// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App Component renders correctly 1`] = `
<RNCSafeAreaProvider
  onInsetsChange={[Function]}
  style={
    [
      {
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      {
        "flex": 1,
      }
    }
  >
    <RNCSafeAreaProvider
      onInsetsChange={[Function]}
      style={
        [
          {
            "flex": 1,
          },
          undefined,
        ]
      }
    >
      <View
        style={
          {
            "height": "100%",
          }
        }
      >
        <View
          style={
            {
              "flex": 1,
            }
          }
        >
          <View
            style={
              [
                {
                  "flex": 1,
                },
                undefined,
              ]
            }
          >
            <View
              style={
                [
                  {
                    "backgroundColor": "rgb(242, 242, 242)",
                    "flex": 1,
                  },
                  undefined,
                ]
              }
            >
              <RNSScreenContainer
                onLayout={[Function]}
                style={
                  {
                    "flex": 1,
                  }
                }
              >
                <RNSScreen
                  activityState={2}
                  collapsable={false}
                  forwardedRef={[Function]}
                  gestureResponseDistance={
                    {
                      "bottom": -1,
                      "end": -1,
                      "start": -1,
                      "top": -1,
                    }
                  }
                  pointerEvents="box-none"
                  style={
                    {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "right": 0,
                      "top": 0,
                    }
                  }
                >
                  <View
                    collapsable={false}
                    style={
                      {
                        "opacity": 1,
                      }
                    }
                  />
                  <View
                    accessibilityElementsHidden={false}
                    closing={false}
                    gestureVelocityImpact={0.3}
                    importantForAccessibility="auto"
                    onClose={[Function]}
                    onGestureBegin={[Function]}
                    onGestureCanceled={[Function]}
                    onGestureEnd={[Function]}
                    onOpen={[Function]}
                    onTransition={[Function]}
                    pointerEvents="box-none"
                    style={
                      [
                        {
                          "display": "flex",
                          "overflow": undefined,
                        },
                        {
                          "bottom": 0,
                          "left": 0,
                          "position": "absolute",
                          "right": 0,
                          "top": 0,
                        },
                      ]
                    }
                    transitionSpec={
                      {
                        "close": {
                          "animation": "spring",
                          "config": {
                            "damping": 500,
                            "mass": 3,
                            "overshootClamping": true,
                            "restDisplacementThreshold": 10,
                            "restSpeedThreshold": 10,
                            "stiffness": 1000,
                          },
                        },
                        "open": {
                          "animation": "spring",
                          "config": {
                            "damping": 500,
                            "mass": 3,
                            "overshootClamping": true,
                            "restDisplacementThreshold": 10,
                            "restSpeedThreshold": 10,
                            "stiffness": 1000,
                          },
                        },
                      }
                    }
                  >
                    <View
                      collapsable={false}
                      pointerEvents="box-none"
                      style={
                        {
                          "flex": 1,
                          "marginTop": 0,
                        }
                      }
                    >
                      <View
                        collapsable={false}
                        forwardedRef={[Function]}
                        handlerTag={1}
                        handlerType="PanGestureHandler"
                        needsOffscreenAlphaCompositing={false}
                        onGestureHandlerEvent={[Function]}
                        onGestureHandlerStateChange={[Function]}
                        style={
                          {
                            "flex": 1,
                            "transform": [
                              {
                                "translateX": 0,
                              },
                              {
                                "translateX": 0,
                              },
                            ],
                          }
                        }
                      >
                        <View
                          pointerEvents="box-none"
                          style={
                            [
                              {
                                "flex": 1,
                                "overflow": "hidden",
                              },
                              [
                                {
                                  "backgroundColor": "rgb(242, 242, 242)",
                                },
                                undefined,
                              ],
                            ]
                          }
                        >
                          <View
                            style={
                              {
                                "flex": 1,
                                "flexDirection": "column-reverse",
                              }
                            }
                          >
                            <View
                              style={
                                {
                                  "flex": 1,
                                }
                              }
                            >
                              <View
                                style={
                                  [
                                    {
                                      "flex": 1,
                                    },
                                    undefined,
                                  ]
                                }
                              >
                                <RNSScreenStack
                                  style={
                                    {
                                      "flex": 1,
                                    }
                                  }
                                >
                                  <RNSScreen
                                    collapsable={false}
                                    forwardedRef={[Function]}
                                    gestureResponseDistance={
                                      {
                                        "bottom": -1,
                                        "end": -1,
                                        "start": -1,
                                        "top": -1,
                                      }
                                    }
                                    nativeBackButtonDismissalEnabled={false}
                                    onAppear={[Function]}
                                    onDisappear={[Function]}
                                    onDismissed={[Function]}
                                    onHeaderBackButtonClicked={[Function]}
                                    onNativeDismissCancelled={[Function]}
                                    onTransitionProgress={[Function]}
                                    onWillDisappear={[Function]}
                                    replaceAnimation="push"
                                    stackPresentation="push"
                                    style={
                                      {
                                        "bottom": 0,
                                        "left": 0,
                                        "position": "absolute",
                                        "right": 0,
                                        "top": 0,
                                      }
                                    }
                                    swipeDirection="horizontal"
                                  >
                                    <RNSScreenStackHeaderConfig
                                      backButtonInCustomView={false}
                                      backgroundColor="rgb(255, 255, 255)"
                                      color="rgb(0, 122, 255)"
                                      direction="ltr"
                                      disableBackButtonMenu={false}
                                      hidden={true}
                                      hideBackButton={false}
                                      largeTitleHideShadow={false}
                                      title="login"
                                      titleColor="rgb(28, 28, 30)"
                                      topInsetEnabled={false}
                                      translucent={false}
                                    />
                                    <View
                                      accessibilityElementsHidden={false}
                                      importantForAccessibility="auto"
                                      style={
                                        {
                                          "flex": 1,
                                          "flexDirection": "column-reverse",
                                        }
                                      }
                                    >
                                      <View
                                        style={
                                          [
                                            {
                                              "flex": 1,
                                            },
                                            {
                                              "backgroundColor": "rgb(242, 242, 242)",
                                            },
                                            {
                                              "backgroundColor": "green",
                                            },
                                          ]
                                        }
                                      >
                                        <View
                                          style={
                                            {
                                              "marginBottom": "auto",
                                              "marginLeft": "auto",
                                              "marginRight": "auto",
                                              "marginTop": "auto",
                                            }
                                          }
                                        >
                                          <Text
                                            style={
                                              {
                                                "marginBottom": 40,
                                                "marginLeft": 40,
                                                "marginRight": 40,
                                                "marginTop": 40,
                                              }
                                            }
                                          >
                                            Login
                                          </Text>
                                          <View
                                            collapsable={false}
                                            style={
                                              {
                                                "backgroundColor": "#6200ee",
                                                "borderColor": "transparent",
                                                "borderRadius": 4,
                                                "borderStyle": "solid",
                                                "borderWidth": 0,
                                                "elevation": 2,
                                                "minWidth": 64,
                                                "shadowColor": "#000000",
                                                "shadowOffset": {
                                                  "height": 0.75,
                                                  "width": 0,
                                                },
                                                "shadowOpacity": 0.24,
                                                "shadowRadius": 1.5,
                                              }
                                            }
                                          >
                                            <View
                                              accessibilityRole="button"
                                              accessibilityState={
                                                {
                                                  "busy": undefined,
                                                  "checked": undefined,
                                                  "disabled": false,
                                                  "expanded": undefined,
                                                  "selected": undefined,
                                                }
                                              }
                                              accessibilityValue={
                                                {
                                                  "max": undefined,
                                                  "min": undefined,
                                                  "now": undefined,
                                                  "text": undefined,
                                                }
                                              }
                                              accessible={true}
                                              collapsable={false}
                                              focusable={true}
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onFocus={[Function]}
                                              onResponderGrant={[Function]}
                                              onResponderMove={[Function]}
                                              onResponderRelease={[Function]}
                                              onResponderTerminate={[Function]}
                                              onResponderTerminationRequest={[Function]}
                                              onStartShouldSetResponder={[Function]}
                                              style={
                                                [
                                                  {
                                                    "overflow": "hidden",
                                                  },
                                                  false,
                                                  {
                                                    "borderRadius": 4,
                                                  },
                                                ]
                                              }
                                              testID="button"
                                            >
                                              <View
                                                style={
                                                  [
                                                    {
                                                      "alignItems": "center",
                                                      "flexDirection": "row",
                                                      "justifyContent": "center",
                                                    },
                                                    undefined,
                                                  ]
                                                }
                                              >
                                                <Text
                                                  numberOfLines={1}
                                                  selectable={false}
                                                  style={
                                                    [
                                                      {
                                                        "textAlign": "left",
                                                      },
                                                      {
                                                        "color": "#000000",
                                                        "fontFamily": "SourceSansPro-Regular",
                                                        "fontWeight": "normal",
                                                      },
                                                      {
                                                        "writingDirection": "ltr",
                                                      },
                                                      [
                                                        {
                                                          "marginHorizontal": 16,
                                                          "marginVertical": 9,
                                                          "textAlign": "center",
                                                        },
                                                        {
                                                          "letterSpacing": 1,
                                                        },
                                                        false,
                                                        undefined,
                                                        {
                                                          "textTransform": "uppercase",
                                                        },
                                                        {
                                                          "color": "#ffffff",
                                                          "fontFamily": "SourceSansPro-Regular",
                                                          "fontWeight": "normal",
                                                        },
                                                        undefined,
                                                      ],
                                                    ]
                                                  }
                                                  testID="button-text"
                                                >
                                                  Sign Up
                                                </Text>
                                              </View>
                                            </View>
                                          </View>
                                        </View>
                                      </View>
                                    </View>
                                  </RNSScreen>
                                </RNSScreenStack>
                              </View>
                            </View>
                          </View>
                        </View>
                      </View>
                    </View>
                  </View>
                </RNSScreen>
              </RNSScreenContainer>
              <View
                collapsable={false}
                pointerEvents="box-none"
                style={
                  {
                    "height": 44,
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                    "zIndex": 1,
                  }
                }
              />
            </View>
          </View>
        </View>
      </View>
    </RNCSafeAreaProvider>
  </View>
</RNCSafeAreaProvider>
`;
