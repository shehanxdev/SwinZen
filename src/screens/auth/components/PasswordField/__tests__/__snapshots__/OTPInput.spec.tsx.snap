// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PasswordField Component should render correctly 1`] = `
<View
  testID="PasswordFieldTestID"
>
  <View>
    <Text
      style={
        [
          {
            "color": "#E9ECEF",
            "lineHeight": 24,
          },
          {
            "fontFamily": "SourceSansPro-SemiBold",
            "fontSize": 16,
            "fontWeight": "600",
            "textAlign": "auto",
          },
        ]
      }
    >
      PasswordFieldLabel
    </Text>
    <View
      style={
        {
          "marginBottom": 0,
          "marginLeft": 0,
          "marginRight": 0,
          "marginTop": 0,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        }
      }
    >
      <View
        pointerEvents="none"
        style={
          [
            {
              "bottom": 0,
              "left": 0,
              "position": "absolute",
              "right": 0,
              "top": 6,
            },
            {
              "backgroundColor": "#283E36",
              "borderColor": "#ffffff00",
              "borderRadius": 10,
              "borderWidth": 1,
            },
          ]
        }
        testID="text-input-outline"
      />
      <View>
        <View
          style={
            [
              {
                "paddingBottom": 0,
              },
              {
                "minHeight": 50,
                "paddingTop": 8,
              },
            ]
          }
        >
          <TextInput
            editable={true}
            maxFontSizeMultiplier={1.5}
            multiline={false}
            onBlur={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            placeholderTextColor="#ADB5BD"
            secureTextEntry={true}
            selectionColor="#6C757D"
            style={
              [
                {
                  "flexGrow": 1,
                  "margin": 0,
                  "paddingHorizontal": 14,
                  "zIndex": 1,
                },
                {
                  "height": 50,
                },
                {
                  "paddingBottom": 17,
                  "paddingTop": 17,
                },
                {
                  "color": "#ADB5BD",
                  "fontFamily": "System",
                  "fontSize": 16,
                  "fontVariant": undefined,
                  "fontWeight": undefined,
                  "textAlign": "left",
                  "textAlignVertical": "center",
                },
                false,
                {
                  "marginLeft": 44,
                  "marginRight": 44,
                  "paddingLeft": 0,
                  "paddingRight": 0,
                },
              ]
            }
            underlineColorAndroid="transparent"
          />
        </View>
        <View
          style={
            [
              {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "position": "absolute",
                "width": 24,
              },
              {
                "left": 12,
                "top": 16,
              },
            ]
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "disabled": false,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            focusable={true}
            hitSlop={
              {
                "bottom": 6,
                "left": 6,
                "right": 6,
                "top": 6,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "overflow": "hidden",
                },
                [
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                    "margin": 6,
                    "overflow": "hidden",
                  },
                  {
                    "borderRadius": 18,
                    "height": 36,
                    "width": 36,
                  },
                  undefined,
                  {
                    "marginTop": "50%",
                  },
                ],
              ]
            }
          >
            <View>
              <SvgMock
                fill="#ADB5BD"
                height={20}
                width={20}
              />
            </View>
          </View>
        </View>
        <View
          style={
            [
              {
                "alignItems": "center",
                "height": 24,
                "justifyContent": "center",
                "position": "absolute",
                "width": 24,
              },
              {
                "right": 12,
                "top": 16,
              },
            ]
          }
        >
          <View
            accessibilityRole="button"
            accessibilityState={
              {
                "disabled": false,
              }
            }
            accessibilityValue={
              {
                "max": undefined,
                "min": undefined,
                "now": undefined,
                "text": undefined,
              }
            }
            accessible={true}
            focusable={true}
            hitSlop={
              {
                "bottom": 6,
                "left": 6,
                "right": 6,
                "top": 6,
              }
            }
            onClick={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              [
                {
                  "overflow": "hidden",
                },
                [
                  {
                    "alignItems": "center",
                    "justifyContent": "center",
                    "margin": 6,
                    "overflow": "hidden",
                  },
                  {
                    "borderRadius": 18,
                    "height": 36,
                    "width": 36,
                  },
                  undefined,
                  {
                    "marginTop": "50%",
                  },
                ],
              ]
            }
          >
            <View>
              <SvgMock
                fill="#ADB5BD"
                height={20}
                width={20}
              />
            </View>
          </View>
        </View>
      </View>
    </View>
    <Text
      style={
        [
          {
            "color": "#E35F5F",
            "lineHeight": 24,
          },
          {
            "fontFamily": "SourceSansPro-Regular",
            "fontSize": 15,
            "fontWeight": "600",
            "textAlign": "auto",
          },
        ]
      }
    />
  </View>
</View>
`;
